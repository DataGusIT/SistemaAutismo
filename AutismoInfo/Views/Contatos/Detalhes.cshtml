@model AutismoInfo.Models.Contatos.ContatosViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = Model.Nome;
}

<div class="container">
    <div class="voltar-container">
        <a asp-action="Index" class="btn-voltar">
            <i class="fas fa-arrow-left"></i> Voltar para Contatos
        </a>
    </div>

    <div class="detalhe-header">
        <div class="detalhe-header-content">
            <h1>@Model.Nome</h1>
            <div class="detalhe-categoria">
                <span class="estado-badge">@Model.Estado</span>
            </div>
        </div>
    </div>

    <div class="detalhe-card">
        <div class="detalhe-content">
            <div class="detalhe-grid">
                <div class="contato-info-section">
                    <h2 class="section-title">Informações de Contato</h2>

                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-map-marker-alt"></i>
                        </div>
                        <div class="info-content">
                            <h3>Endereço</h3>
                            <p>@Model.Endereco<br>@Model.Cidade - @Model.Estado</p>
                        </div>
                    </div>

                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-phone"></i>
                        </div>
                        <div class="info-content">
                            <h3>Telefone</h3>
                            <p>@Model.Telefone</p>
                        </div>
                    </div>

                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-envelope"></i>
                        </div>
                        <div class="info-content">
                            <h3>Email</h3>
                            <p><a href="mailto:@Model.Email">@Model.Email</a></p>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Website))
                    {
                        <div class="info-item">
                            <div class="info-icon">
                                <i class="fas fa-globe"></i>
                            </div>
                            <div class="info-content">
                                <h3>Website</h3>
                                <p><a href="@Model.Website" target="_blank" class="website-link">@Model.Website <i class="fas fa-external-link-alt"></i></a></p>
                            </div>
                        </div>
                    }

                    <div class="info-item">
                        <div class="info-icon">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="info-content">
                            <h3>Horário de Atendimento</h3>
                            <p>@Model.HorarioAtendimento</p>
                        </div>
                    </div>
                </div>

                <div class="sobre-section">
                    <h2 class="section-title">Sobre</h2>
                    <div class="sobre-content">
                        <p>@Model.Descricao</p>
                    </div>

                    <h2 class="section-title servicos-title">Serviços Oferecidos</h2>
                    <div class="servicos-container">
                        @foreach (var servico in Model.Servicos.Split(','))
                        {
                            <span class="servico-badge">@servico.Trim()</span>
                        }
                    </div>
                </div>
            </div>

            <div class="mapa-section">
                <h2 class="section-title">Localização</h2>
                <div id="map" class="mapa-container"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=INSIRA_SUA_CHAVE_API_GOOGLE_MAPS&callback=initMap" async defer></script>
    <script>
        function initMap() {
            var location = { lat: @Model.Latitude, lng: @Model.Longitude };
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 15,
                center: location,
                styles: [
                    {
                        "featureType": "administrative",
                        "elementType": "geometry",
                        "stylers": [{"visibility": "off"}]
                    },
                    {
                        "featureType": "poi",
                        "stylers": [{"visibility": "simplified"}]
                    },
                    {
                        "featureType": "road",
                        "elementType": "labels.icon",
                        "stylers": [{"visibility": "off"}]
                    },
                    {
                        "featureType": "transit",
                        "stylers": [{"visibility": "off"}]
                    }
                ]
            });

            var marker = new google.maps.Marker({
                position: location,
                map: map,
                title: '@Model.Nome',
                animation: google.maps.Animation.DROP
            });
            
            var infoWindow = new google.maps.InfoWindow({
                content: '<div class="map-info-window"><strong>@Model.Nome</strong><br>@Model.Endereco</div>'
            });
            
            marker.addListener('click', function() {
                infoWindow.open(map, marker);
            });
        }
    </script>
}

<style>
:root {
    --purple-primary: #6a3ea1;
    --purple-light: #9d72d3;
    --purple-dark: #5b2e8a;
    --gray-light: #f5f5f7;
    --gray-medium: #d1d1d1;
    --gray-dark: #636363;
    --white: #ffffff;
    
    --shadow-sm: 0 2px 8px rgba(106, 62, 161, 0.1);
    --shadow-md: 0 4px 12px rgba(106, 62, 161, 0.15);
    --shadow-lg: 0 8px 24px rgba(106, 62, 161, 0.2);
    
    --radius-sm: 8px;
    --radius-md: 12px;
    --radius-lg: 20px;
    
    --transition: all 0.3s ease;
}

/* Espaçamento e botão de voltar */
.voltar-container {
    margin: 30px 0;
}

.btn-voltar {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 10px 16px;
    background-color: var(--white);
    color: var(--purple-dark);
    border: 2px solid var(--purple-dark);
    border-radius: var(--radius-sm);
    font-weight: 500;
    text-decoration: none;
    transition: var(--transition);
}

.btn-voltar:hover {
    background-color: var(--purple-dark);
    color: var(--white);
    transform: translateY(-2px);
}

/* Header da página de detalhes */
.detalhe-header {
    background: linear-gradient(135deg, var(--purple-primary), var(--purple-dark));
    color: var(--white);
    padding: 40px 30px;
    border-radius: var(--radius-lg);
    margin-bottom: 30px;
    position: relative;
    overflow: hidden;
    box-shadow: var(--shadow-lg);
}

.detalhe-header:before {
    content: "";
    position: absolute;
    top: -50px;
    right: -50px;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    background: var(--purple-light);
    opacity: 0.2;
}

.detalhe-header:after {
    content: "";
    position: absolute;
    bottom: -50px;
    left: -50px;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    background: var(--purple-light);
    opacity: 0.2;
}

.detalhe-header-content {
    position: relative;
    z-index: 2;
}

.detalhe-header h1 {
    font-size: 2.2rem;
    font-weight: 700;
    margin-bottom: 15px;
}

.detalhe-categoria {
    display: flex;
    gap: 10px;
}

.categoria-badge, .estado-badge {
    padding: 6px 15px;
    border-radius: 30px;
    font-size: 0.9rem;
    font-weight: 500;
}

.categoria-badge {
    background-color: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(5px);
}

.estado-badge {
    background-color: var(--purple-light);
}

/* Card principal */
.detalhe-card {
    background-color: var(--white);
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-md);
    margin-bottom: 40px;
    overflow: hidden;
}

.detalhe-content {
    padding: 30px;
}

/* Layout de grid */
.detalhe-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 40px;
    margin-bottom: 40px;
}

.section-title {
    color: var(--purple-dark);
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 25px;
    padding-bottom: 10px;
    border-bottom: 2px solid var(--purple-light);
}

/* Informações de contato */
.info-item {
    display: flex;
    gap: 20px;
    margin-bottom: 25px;
}

.info-icon {
    width: 50px;
    height: 50px;
    background-color: rgba(106, 62, 161, 0.1);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.info-icon i {
    color: var(--purple-primary);
    font-size: 1.5rem;
}

.info-content h3 {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--purple-dark);
    margin-bottom: 5px;
}

.info-content p {
    color: var(--gray-dark);
    margin-bottom: 0;
    line-height: 1.5;
}

.info-content a {
    color: var(--purple-primary);
    text-decoration: none;
    transition: var(--transition);
}

.info-content a:hover {
    color: var(--purple-dark);
    text-decoration: underline;
}

.website-link {
    display: inline-flex;
    align-items: center;
    gap: 5px;
}

/* Sobre e serviços */
.sobre-content {
    background-color: var(--gray-light);
    padding: 20px;
    border-radius: var(--radius-sm);
    margin-bottom: 30px;
}

.sobre-content p {
    color: var(--gray-dark);
    line-height: 1.7;
    margin-bottom: 0;
}

.servicos-title {
    margin-top: 30px;
}

.servicos-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
}

.servico-badge {
    background-color: var(--purple-primary);
    color: var(--white);
    padding: 8px 15px;
    border-radius: var(--radius-sm);
    font-size: 0.9rem;
    font-weight: 500;
    transition: var(--transition);
}

.servico-badge:hover {
    background-color: var(--purple-dark);
    transform: translateY(-2px);
}

/* Seção do mapa */
.mapa-section {
    margin-top: 20px;
}

.mapa-container {
    height: 400px;
    border-radius: var(--radius-md);
    overflow: hidden;
    box-shadow: var(--shadow-sm);
}

/* Ajustes responsivos */
@@media (max-width: 768px) {
    .detalhe-grid {
        grid-template-columns: 1fr;
        gap: 30px;
    }
    
    .detalhe-header {
        padding: 30px 20px;
    }
    
    .detalhe-header h1 {
        font-size: 1.8rem;
    }
    
    .detalhe-content {
        padding: 20px;
    }
    
    .mapa-container {
        height: 300px;
    }
}

/* Estilo para a janela de informações do mapa */
.map-info-window {
    padding: 8px;
    font-family: Arial, sans-serif;
    line-height: 1.5;
}
</style>